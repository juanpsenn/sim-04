{"version":3,"sources":["library/generarDemanda.js","library/distribuciones.jsx","components/Filas.jsx","App.js","library/generadorFila.js","serviceWorker.js","index.js"],"names":["demandas","frecuenciasAcumuladas","obtenerDemanda","random","demanda","forEach","frecuencia","index","Generador","this","m","a","c","_last","Date","now","Math","uniform","b","r","temp","getNext","Number","toFixed","num","fixed","re","RegExp","toString","match","useStyles","makeStyles","root","width","container","maxHeight","Filas","props","classes","columns","rows","React","useState","page","setPage","rowsPerPage","setRowsPerPage","className","TableContainer","Table","stickyHeader","aria-label","TableHead","TableRow","map","column","TableCell","key","align","TableBody","slice","row","hover","role","tabIndex","cell","TablePagination","rowsPerPageOptions","component","count","length","onChangePage","event","newPage","onChangeRowsPerPage","target","value","App","politica","setPolitica","setRows","iteraciones","kc","kp","gr","stockAnterior","ventasPerdidas","stock","desde","hasta","form","setForm","handleChange","name","handleClick","perdidaAnterior","rnd","nuevaFila","costoCompra","costoPerdida","gananciaReembolso","costoDiario","costoAcum","compra","perdida","reembolso","i","push","reverse","calcularFilaPoliticaA","stockInit","calcularFilaPoliticaB","fluid","style","backgroundColor","sm","toggle","checked","onChange","fontWeight","type","placeholder","disabled","block","onClick","Boolean","window","location","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.3a9b1f8a.chunk.js","sourcesContent":["// Frecuencias acumuladas\n// 20\t0,30\t0,30\n// 21\t0,25\t0,55\n// 22\t0,20\t0,75\n// 23\t0,15\t0,90\n// 24\t0,05\t0,95\n// 25\t0,05\t1,00\n\nconst demandas = [20, 21, 22, 23, 24, 25];\nconst frecuenciasAcumuladas = [0.30, 0.55, 0.75, 0.90, 0.95, 1.00];\nexport const randomTest = [0.22, 0.50, 0.13, 0.36, 0.91, 0.10, 0.72, 0.74, 0.76, 0.82, 0.94, 0.56,\n  0.67, 0.66, 0.60, 0.50, 0.82, 0.00, 0.79, 0.89];\n\nexport function obtenerDemanda(random) {\n  let demanda;\n\n  frecuenciasAcumuladas.forEach((frecuencia, index) => {\n    if (!demanda && random < frecuencia) {\n      demanda = demandas[index]\n    }\n  });\n\n  return demanda;\n}\n\n","class Generador {\n  constructor() {\n    this.m = 4294967296;\n    this.a = 1664525;\n    this.c = 1013904223;\n    this._last = Date.now();\n  }\n\n  getNext() {\n    // this._last = (this.a * this._last + this.c) % this.m;\n    // return Number(toFixed(this._last / this.m, 4));\n    return Math.random();\n  }\n}\n\n\nexport function uniform(a, b) {\n  let generador = new Generador();\n  let r;\n  let temp;\n\n  temp = (generador.getNext() * (b - a));\n  r = (Number(a) + temp);\n  return Number(toFixed(r, 4));\n}\n\nexport function poisson(lambda) {\n  let generador = new Generador();\n\n  let p = 1;\n  let x = -1;\n  let a = Math.exp(-1 * lambda);\n  let u = generador.getNext();\n  p = p * u;\n  x = x + 1;\n  while (p >= a) {\n    u = generador.getNext();\n    p = p * u;\n    x = x + 1;\n  }\n  return x\n}\n\n\nexport function boxMuller(media, desv) {\n  let generador = new Generador();\n\n  let r1 = generador.getNext();\n  let r2 = generador.getNext();\n\n  let n1 = (Math.sqrt(-2 * Math.log(r1)) * Math.cos(2 * Math.PI * r2)) * desv + media;\n  let n2 = (Math.sqrt(-2 * Math.log(r1)) * Math.sin(2 * Math.PI * r2)) * desv + media;\n\n  return [n1, n2]\n}\n\nexport function convolution(media, desv) {\n  let generador = new Generador();\n\n  let rnd = 0;\n  for (let i = 0; i < 12; i++) {\n    rnd += generador.getNext();\n  }\n  rnd = ((rnd - 6) * desv) + media;\n  return Number(toFixed(rnd, 4))\n}\n\nexport function exponential(media) {\n  let generador = new Generador();\n  let exponencial;\n  let lambda = (1 / Number(media));\n\n  let random = generador.getNext();\n  exponencial = -1 * (1 / lambda) * Math.log(1 - random);\n  return Number(exponencial);\n}\n\n\nexport function arrayMin(arr) {\n  let len = arr.length,\n    min = Infinity;\n  while (len--) {\n    if (Number(arr[len]) < min) {\n      min = Number(arr[len]);\n    }\n  }\n  return min;\n}\n\nexport function arrayMax(arr) {\n  let len = arr.length,\n    max = -Infinity;\n  while (len--) {\n    if (Number(arr[len]) > max) {\n      max = Number(arr[len]);\n    }\n  }\n  return max;\n}\n\nexport function toFixed(num, fixed) {\n  let re = new RegExp(\"^-?\\\\d+(?:.\\\\d{0,\" + (fixed || -1) + \"})?\");\n  return num.toString().match(re) ? num.toString().match(re)[0] : num.toString();\n}\n","import React from \"react\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport Table from \"@material-ui/core/Table\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TablePagination from \"@material-ui/core/TablePagination\";\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\nimport {Card} from \"shards-react\";\n\nconst useStyles = makeStyles({\n  root: {\n    width: \"100%\",\n  },\n  container: {\n    maxHeight: 440,\n  },\n});\n\nconst Filas = (props) => {\n  const classes = useStyles();\n  const {columns, rows} = props;\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(20);\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = (event) => {\n    setRowsPerPage(+event.target.value);\n    setPage(0);\n  };\n\n  return (\n    <Card className={classes.root}>\n      <TableContainer className={classes.container}>\n        <Table stickyHeader aria-label=\"sticky table\">\n          <TableHead>\n            <TableRow>\n              {columns.map((column, index) => (\n                <TableCell\n                  key={index}\n                  align={\"center\"}\n                >\n                  {column}\n                </TableCell>\n              ))}\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {rows && rows\n              .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n              .map((row, index) => {\n                return (\n                  <TableRow hover role=\"checkbox\" tabIndex={-1} key={index}>\n                    {row.map((cell, index) => {\n                      return (\n                        <TableCell key={index} align={\"center\"}>\n                          {cell}\n                        </TableCell>\n                      );\n                    })}\n                  </TableRow>\n                );\n              })}\n          </TableBody>\n        </Table>\n      </TableContainer>\n      <TablePagination\n        rowsPerPageOptions={[20, 100, 150]}\n        component=\"div\"\n        count={rows.length}\n        rowsPerPage={rowsPerPage}\n        page={page}\n        onChangePage={handleChangePage}\n        onChangeRowsPerPage={handleChangeRowsPerPage}\n      />\n    </Card>\n  )\n};\n\nexport default Filas;","import React, {useState} from 'react';\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"shards-ui/dist/css/shards.min.css\"\n\nimport {\n  Button,\n  Card,\n  CardBody,\n  CardHeader,\n  CardTitle,\n  Col,\n  Container,\n  FormCheckbox,\n  FormGroup,\n  FormInput,\n  Row\n} from \"shards-react\";\nimport {calcularFilaPoliticaA, calcularFilaPoliticaB} from \"./library/generadorFila\";\nimport Filas from \"./components/Filas\";\n\n\nconst App = () => {\n  const [politica, setPolitica] = useState(true);\n  const columns = [\"#\", \"RND\", \"Dem.\", \"Stock\", \"Kc\", \"Kp\", \"Gr\", \"Costo diario\", \"ACUM\", \"PROM\"];\n  const [rows, setRows] = useState([]);\n  const [form, setForm] = useState({\n    iteraciones: 20,\n    kc: 0.80,\n    kp: 0.40,\n    gr: 0.20,\n    stockAnterior: 20,\n    ventasPerdidas: 3,\n    stock: 23,\n    desde: 0,\n    hasta: 20\n  });\n\n\n  const handleChange = (event) => {\n    const {value, name} = event.target;\n    setForm({...form, [name]: value});\n  };\n\n  const handleChangeIteraciones = (event) => {\n    const {value} = event.target;\n    setForm({...form, iteraciones: value, hasta:value});\n  };\n\n\n  const handleClick = () => {\n    const {iteraciones, kc, kp, gr, stockAnterior, ventasPerdidas, stock, desde, hasta} = form;\n    switch (politica) {\n      case true:\n        // rnd, demanda, stock, costoCompra, costoPerdida, gananciaReembolso, costoDiario, costoAcum, costoPromedio\n        setRows(calcularFilaPoliticaA(Number(iteraciones), Number(kc),\n          Number(kp), Number(gr), Number(stockAnterior), Number(ventasPerdidas), Number(desde), Number(hasta)));\n        break;\n      case false:\n        setRows(calcularFilaPoliticaB(Number(iteraciones), Number(kc),\n          Number(kp), Number(gr), Number(stock), Number(desde), Number(hasta)));\n        break;\n      default:\n        break;\n    }\n  };\n\n\n  return (\n    <Container fluid style={{backgroundColor: \"#e9e9e9\"}}>\n      <Row className={\"mt-2\"}>\n        <Col sm={3}>\n          <Card>\n            <CardHeader>\n              <CardTitle>\n                Parametros\n              </CardTitle>\n            </CardHeader>\n            <CardBody>\n              <form>\n                <Row className={\"mb-2\"}>\n                  <Col>\n                    <FormCheckbox toggle\n                                  checked={politica}\n                                  onChange={() => {\n                                    setPolitica(!politica)\n                                  }}>\n                  <span style={{fontWeight: \"bold\"}}>\n                    {(politica && \"POLITICA A\") || \"POLITICA B\"}\n                  </span>\n                    </FormCheckbox>\n                  </Col>\n                </Row>\n                <FormGroup>\n                  <label>Costo compra</label>\n                  <FormInput name={\"kc\"} type={\"number\"} placeholder={\"Ej: $ 0.40\"} value={form.kc}\n                             onChange={handleChange}/>\n                </FormGroup>\n                <FormGroup>\n                  <label>Costo venta perdida</label>\n                  <FormInput name={\"kp\"} type={\"number\"} placeholder={\"Ej: $ 0.40\"} value={form.kp}\n                             onChange={handleChange}/>\n                </FormGroup>\n                <FormGroup>\n                  <label>Ganancia reembolso</label>\n                  <FormInput name={\"gr\"} type={\"number\"} placeholder={\"Ej: $ 0.40\"} value={form.gr}\n                             onChange={handleChange}/>\n                </FormGroup>\n                <FormGroup>\n                  <label>Iteraciones</label>\n                  <FormInput name={\"iteraciones\"} type={\"number\"} placeholder={\"Ej: $ 0.40\"} value={form.iteraciones}\n                             onChange={handleChangeIteraciones}/>\n                </FormGroup>\n                {politica ? (\n                    <div>\n                      <FormGroup>\n                        <label>Stock anterior</label>\n                        <FormInput name={\"stockAnterior\"} type={\"number\"} placeholder={\"Ej: 21\"}\n                                   value={form.stockAnterior}\n                                   onChange={handleChange}/>\n                      </FormGroup>\n                      <FormGroup>\n                        <label>Ventas perdidas anterior</label>\n                        <FormInput name={\"ventasPerdidas\"} type={\"number\"} placeholder={\"Ej: 3\"}\n                                   value={form.ventasPerdidas}\n                                   onChange={handleChange}/>\n                      </FormGroup>\n                    </div>) :\n                  <FormGroup>\n                    <label>Stock</label>\n                    <FormInput disabled name={\"stock\"} type={\"number\"} placeholder={\"Ej: 20\"} value={form.stock}\n                               onChange={handleChange}/>\n                  </FormGroup>\n                }\n                <Button block onClick={() => handleClick()}>\n                  SIMULAR\n                </Button>\n              </form>\n            </CardBody>\n          </Card>\n        </Col>\n        <Col>\n          <Row className={\"mb-2\"}>\n            <Col sm={4}>\n              <Card>\n                <CardBody>\n                  <FormGroup>\n                    <label>\n                      Desde\n                    </label>\n                    <FormInput name={\"desde\"} type={\"number\"} placeholder={\"Ej: 1\"}\n                               value={form.desde}\n                               onChange={handleChange}/>\n                  </FormGroup>\n                  <FormGroup>\n                    <label>\n                      Hasta\n                    </label>\n                    <FormInput name={\"hasta\"} type={\"number\"} placeholder={\"Ej: 20\"}\n                               value={form.hasta}\n                               onChange={handleChange}/>\n                  </FormGroup>\n                </CardBody>\n              </Card>\n            </Col>\n          </Row>\n          <Filas columns={columns} rows={rows}/>\n\n        </Col>\n      </Row>\n    </Container>\n  );\n};\n\nexport default App;\n","import {obtenerDemanda} from \"./generarDemanda\";\nimport {toFixed, uniform} from \"./distribuciones\";\n\nexport function calcularFilaPoliticaB(iteraciones, kc, kp, gr, stockInit, desde, hasta) {\n  let nuevaFila = [];\n  let costoCompra = 0;\n  let costoPerdida = 0;\n  let gananciaReembolso = 0;\n  let costoDiario = 0;\n  let costoAcum = 0;\n  let costoPromedio = 0;\n  let rnd;\n  let stock = stockInit;\n  let demanda = 0;\n  let compra = kc;\n  let perdida = kp;\n  let reembolso = gr;\n  let rows = [];\n\n  for (let i = 1; i <= iteraciones; i++) {\n    rnd = uniform(0, 1);\n    demanda = obtenerDemanda(rnd);\n    stock = 23;\n    costoCompra = Number(toFixed(stock * compra, 4));\n    if (stock < demanda) {\n      costoPerdida = Number(toFixed((demanda - stock) * perdida, 4));\n    } else {\n      costoPerdida = 0;\n    }\n\n    if (stock > demanda) {\n      gananciaReembolso = Number(toFixed((stock - demanda) * reembolso, 4))\n    } else {\n      gananciaReembolso = 0;\n    }\n\n    costoDiario = Number(toFixed(costoCompra + costoPerdida - gananciaReembolso, 4));\n    costoAcum = Number(toFixed(costoAcum + costoDiario, 4));\n    costoPromedio = Number(toFixed(costoAcum / i, 4));\n    nuevaFila = [i, rnd, demanda, stock, costoCompra, costoPerdida, gananciaReembolso, costoDiario, costoAcum, costoPromedio];\n    i >= desde && i <= hasta && rows.push(nuevaFila)\n  }\n  return rows.reverse();\n}\n\nexport function calcularFilaPoliticaA(iteraciones, kc, kp, gr, stockAnterior, perdidaAnterior, desde, hasta) {\n  let nuevaFila = [];\n  let costoCompra = 0;\n  let costoPerdida = 0;\n  let gananciaReembolso = 0;\n  let costoDiario = 0;\n  let costoAcum = 0;\n  let costoPromedio = 0;\n  let rnd;\n  let demanda = 0;\n  let stock = stockAnterior;\n  let compra = kc;\n  let perdida = kp;\n  let reembolso = gr;\n  let rows = [];\n\n  for (let i = 1; i <= iteraciones; i++) {\n    rnd = uniform(0, 1);\n    demanda = obtenerDemanda(rnd);\n    stock += perdidaAnterior;\n    costoCompra = Number(toFixed(stock * compra, 4));\n    if (stock < demanda) {\n      costoPerdida = Number(toFixed((demanda - stock) * perdida, 4));\n    } else {\n      costoPerdida = 0;\n    }\n\n    if (stock > demanda) {\n      gananciaReembolso = Number(toFixed((stock - demanda) * reembolso, 4))\n    } else {\n      gananciaReembolso = 0;\n    }\n\n    costoDiario = Number(toFixed(costoCompra + costoPerdida - gananciaReembolso, 4));\n    costoAcum = Number(toFixed(costoAcum + costoDiario, 4));\n    costoPromedio = Number(toFixed(costoAcum / i, 4));\n\n    nuevaFila = [i, rnd, demanda, stock, costoCompra, costoPerdida, gananciaReembolso, costoDiario, costoAcum, costoPromedio];\n\n    if (demanda > stock) {\n      perdidaAnterior = (demanda - stock);\n    } else {\n      perdidaAnterior = 0\n    }\n    i >= desde && i <= hasta && rows.push(nuevaFila)\n  }\n  return rows.reverse();\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}